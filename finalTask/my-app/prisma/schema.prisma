// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product{
  id                    String    @id @default(uuid())
  name                  String
  priceInCents          Int 
  filePath              String
  imagePath             String
  description           String
  isAvailableForPurchase Boolean @default(true)
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  orders Order[]
  DownloadVerifications DownloadVerification[]
}

model User{
  id          String    @id @default(uuid())
  email       String    @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
}
//orders Order[], since every user has a order

model Order{
  id          String   @id @default(uuid())
  priceInCents Int 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  productId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)
}
//onDelete: Cascade--> on deleting the user, every order that is associated with him is removed
//onDelete:Restrict--> Cannot delete the product if it has orders

model DownloadVerification{
  id      String  @id @default(uuid())
  expiresAt DateTime 
  createdAt DateTime @default(now())
  productId String
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}
//onDelete: Cascade-->on deleting the product, downloadVerification link gets deleted
//expiresAt DateTime --> tells when the download link should expire